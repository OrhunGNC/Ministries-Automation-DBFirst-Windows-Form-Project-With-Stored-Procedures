//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BakanlıkProje
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BakanlıklarEntities : DbContext
    {
        public BakanlıklarEntities()
            : base("name=BakanlıklarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bakanlık> Bakanlık { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Vatanda> Vatandas { get; set; }
        public virtual DbSet<Vergiler> Vergilers { get; set; }
    
        public virtual ObjectResult<BakanlıkSearch_Result> BakanlıkSearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BakanlıkSearch_Result>("BakanlıkSearch");
        }
    
        public virtual int BakanlikAdd(string bakanlıkAdi, string daireBaskanlik, Nullable<decimal> ciro, string merkez)
        {
            var bakanlıkAdiParameter = bakanlıkAdi != null ?
                new ObjectParameter("bakanlıkAdi", bakanlıkAdi) :
                new ObjectParameter("bakanlıkAdi", typeof(string));
    
            var daireBaskanlikParameter = daireBaskanlik != null ?
                new ObjectParameter("daireBaskanlik", daireBaskanlik) :
                new ObjectParameter("daireBaskanlik", typeof(string));
    
            var ciroParameter = ciro.HasValue ?
                new ObjectParameter("Ciro", ciro) :
                new ObjectParameter("Ciro", typeof(decimal));
    
            var merkezParameter = merkez != null ?
                new ObjectParameter("Merkez", merkez) :
                new ObjectParameter("Merkez", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BakanlikAdd", bakanlıkAdiParameter, daireBaskanlikParameter, ciroParameter, merkezParameter);
        }
    
        public virtual int BakanlikDel(Nullable<int> bakanlıkID)
        {
            var bakanlıkIDParameter = bakanlıkID.HasValue ?
                new ObjectParameter("bakanlıkID", bakanlıkID) :
                new ObjectParameter("bakanlıkID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BakanlikDel", bakanlıkIDParameter);
        }
    
        public virtual ObjectResult<BakanlikList_Result> BakanlikList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BakanlikList_Result>("BakanlikList");
        }
    
        public virtual int BakanlikUpdate(Nullable<int> bakanlıkID, string bakanlıkAdi, string daireBaskanlik, Nullable<decimal> ciro, string merkez)
        {
            var bakanlıkIDParameter = bakanlıkID.HasValue ?
                new ObjectParameter("bakanlıkID", bakanlıkID) :
                new ObjectParameter("bakanlıkID", typeof(int));
    
            var bakanlıkAdiParameter = bakanlıkAdi != null ?
                new ObjectParameter("bakanlıkAdi", bakanlıkAdi) :
                new ObjectParameter("bakanlıkAdi", typeof(string));
    
            var daireBaskanlikParameter = daireBaskanlik != null ?
                new ObjectParameter("daireBaskanlik", daireBaskanlik) :
                new ObjectParameter("daireBaskanlik", typeof(string));
    
            var ciroParameter = ciro.HasValue ?
                new ObjectParameter("Ciro", ciro) :
                new ObjectParameter("Ciro", typeof(decimal));
    
            var merkezParameter = merkez != null ?
                new ObjectParameter("Merkez", merkez) :
                new ObjectParameter("Merkez", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BakanlikUpdate", bakanlıkIDParameter, bakanlıkAdiParameter, daireBaskanlikParameter, ciroParameter, merkezParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int VatandasAdd(string tCNo, string meslek, string adres, string telefon, string mail)
        {
            var tCNoParameter = tCNo != null ?
                new ObjectParameter("TCNo", tCNo) :
                new ObjectParameter("TCNo", typeof(string));
    
            var meslekParameter = meslek != null ?
                new ObjectParameter("Meslek", meslek) :
                new ObjectParameter("Meslek", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("Adres", adres) :
                new ObjectParameter("Adres", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VatandasAdd", tCNoParameter, meslekParameter, adresParameter, telefonParameter, mailParameter);
        }
    
        public virtual int VatandasDel(Nullable<int> vatandasID)
        {
            var vatandasIDParameter = vatandasID.HasValue ?
                new ObjectParameter("vatandasID", vatandasID) :
                new ObjectParameter("vatandasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VatandasDel", vatandasIDParameter);
        }
    
        public virtual ObjectResult<VatandasList_Result> VatandasList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VatandasList_Result>("VatandasList");
        }
    
        public virtual ObjectResult<VatandasSearch_Result> VatandasSearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VatandasSearch_Result>("VatandasSearch");
        }
    
        public virtual int VatandasUpdate(Nullable<int> vatandasID, string tCNo, string meslek, string adres, string telefon, string mail)
        {
            var vatandasIDParameter = vatandasID.HasValue ?
                new ObjectParameter("vatandasID", vatandasID) :
                new ObjectParameter("vatandasID", typeof(int));
    
            var tCNoParameter = tCNo != null ?
                new ObjectParameter("TCNo", tCNo) :
                new ObjectParameter("TCNo", typeof(string));
    
            var meslekParameter = meslek != null ?
                new ObjectParameter("Meslek", meslek) :
                new ObjectParameter("Meslek", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("Adres", adres) :
                new ObjectParameter("Adres", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VatandasUpdate", vatandasIDParameter, tCNoParameter, meslekParameter, adresParameter, telefonParameter, mailParameter);
        }
    
        public virtual int VergiAdd(string vergiAdi, string vergiTipi, Nullable<decimal> tutar, string faiz, Nullable<int> bakanlıkID, Nullable<int> vatandasID)
        {
            var vergiAdiParameter = vergiAdi != null ?
                new ObjectParameter("vergiAdi", vergiAdi) :
                new ObjectParameter("vergiAdi", typeof(string));
    
            var vergiTipiParameter = vergiTipi != null ?
                new ObjectParameter("vergiTipi", vergiTipi) :
                new ObjectParameter("vergiTipi", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("Tutar", tutar) :
                new ObjectParameter("Tutar", typeof(decimal));
    
            var faizParameter = faiz != null ?
                new ObjectParameter("faiz", faiz) :
                new ObjectParameter("faiz", typeof(string));
    
            var bakanlıkIDParameter = bakanlıkID.HasValue ?
                new ObjectParameter("bakanlıkID", bakanlıkID) :
                new ObjectParameter("bakanlıkID", typeof(int));
    
            var vatandasIDParameter = vatandasID.HasValue ?
                new ObjectParameter("vatandasID", vatandasID) :
                new ObjectParameter("vatandasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VergiAdd", vergiAdiParameter, vergiTipiParameter, tutarParameter, faizParameter, bakanlıkIDParameter, vatandasIDParameter);
        }
    
        public virtual int VergiDel(Nullable<int> vergiID)
        {
            var vergiIDParameter = vergiID.HasValue ?
                new ObjectParameter("vergiID", vergiID) :
                new ObjectParameter("vergiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VergiDel", vergiIDParameter);
        }
    
        public virtual ObjectResult<VergiList_Result> VergiList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VergiList_Result>("VergiList");
        }
    
        public virtual ObjectResult<VergiSearch_Result> VergiSearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VergiSearch_Result>("VergiSearch");
        }
    
        public virtual int VergiUpdate(Nullable<int> vergiID, string vergiAdi, string vergiTipi, Nullable<decimal> tutar, string faiz, Nullable<int> bakanlıkID, Nullable<int> vatandasID)
        {
            var vergiIDParameter = vergiID.HasValue ?
                new ObjectParameter("vergiID", vergiID) :
                new ObjectParameter("vergiID", typeof(int));
    
            var vergiAdiParameter = vergiAdi != null ?
                new ObjectParameter("vergiAdi", vergiAdi) :
                new ObjectParameter("vergiAdi", typeof(string));
    
            var vergiTipiParameter = vergiTipi != null ?
                new ObjectParameter("vergiTipi", vergiTipi) :
                new ObjectParameter("vergiTipi", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("Tutar", tutar) :
                new ObjectParameter("Tutar", typeof(decimal));
    
            var faizParameter = faiz != null ?
                new ObjectParameter("faiz", faiz) :
                new ObjectParameter("faiz", typeof(string));
    
            var bakanlıkIDParameter = bakanlıkID.HasValue ?
                new ObjectParameter("bakanlıkID", bakanlıkID) :
                new ObjectParameter("bakanlıkID", typeof(int));
    
            var vatandasIDParameter = vatandasID.HasValue ?
                new ObjectParameter("vatandasID", vatandasID) :
                new ObjectParameter("vatandasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VergiUpdate", vergiIDParameter, vergiAdiParameter, vergiTipiParameter, tutarParameter, faizParameter, bakanlıkIDParameter, vatandasIDParameter);
        }
    }
}
